I am not including ALL versions of program.
I am including the base program, the fft program, and the optimized fft.

For regression testing, a diff is done on the produced convoluted .wav file with the wav file produced by the non-fft transform (tablaSlowConvolve.wav).
This should be sufficient because regression testing is a 'functional' test, and we are doing optimizations which are supposed to not change the functionallity of the program.

TUNING: 5 code optimizations and 1 compiler optimization

++++++++++++++++++++++++++++++++++++BEFORE FFT+++++++++++++++++++++++++++++++++++++++++++++++++++++++
    frames=1046992
    samplerate=44100
    channels=1
    num_items=1046992
    Read 1046992 items
    
    frames=106599
    samplerate=44100
    channels=1
    num_items=106599
    Read 106599 items
    
    resultSize1153591
    resultData.size()1153591
    
    real        15m31.189s
    user        15m28.227s
    sys 0m0.847s


Time of 15.5 minutes.

+++++++++++++++++++++++++++++FFT without optimizations+++++++++++++++++++++++++++

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.74% of 1.35 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.03    1.32                 main [1]
                0.75    0.09       2/2           four2(double*, unsigned long) [2]
                0.39    0.05       1/1           four1(double*, unsigned long) [3]
                0.01    0.02       2/2           getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [6]
                0.01    0.01 1153591/2307182     std::vector<double, std::allocator<double> >::push_back(double const&) [5]
                0.00    0.00 1153598/1153842     std::vector<double, std::allocator<double> >::size() const [17]
                0.00    0.00 1153591/1153591     std::vector<double, std::allocator<double> >::operator[](unsigned long) [18]
                0.00    0.00 1048576/1048580     fwriteShortLSB(short, _IO_FILE*) [19]
                0.00    0.00       1/62          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [42]
                0.00    0.00       1/1           writeWaveFileHeader(int, int, double, _IO_FILE*) [61]
-----------------------------------------------
                0.75    0.09       2/2           main [1]
[2]     62.5    0.75    0.09       2         four2(double*, unsigned long) [2]
                0.09    0.00 2095104/3142656     void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.39    0.05       1/1           main [1]
[3]     32.3    0.39    0.05       1         four1(double*, unsigned long) [3]
                0.05    0.00 1047552/3142656     void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.05    0.00 1047552/3142656     four1(double*, unsigned long) [3]
                0.09    0.00 2095104/3142656     four2(double*, unsigned long) [2]
[4]     10.4    0.14    0.00 3142656         void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.01    0.01 1153591/2307182     getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [6]
                0.01    0.01 1153591/2307182     main [1]
[5]      2.2    0.01    0.02 2307182         std::vector<double, std::allocator<double> >::push_back(double const&) [5]
                0.00    0.02 2307121/2307182     void __gnu_cxx::__alloc_traits<std::allocator<double> >::construct<double>(std::allocator<double>&, double*, double const&) [8]
                0.00    0.00      61/61          std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&) [10]
                0.00    0.00      61/61          std::vector<double, std::allocator<double> >::end() [48]



++++++++++++++++++++++++++First optimzation after FFT++++++++++++++++++++++++++++++
++++++using memset to zero out arrays instead of setting inside forloop+++++++++++
		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.75% of 1.33 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.03    1.30                 main [1]
                0.74    0.11       2/2           four2(double*, unsigned long) [2]
                0.36    0.05       1/1           four1(double*, unsigned long) [3]
                0.01    0.02       2/2           getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [6]
                0.01    0.01 1153591/2307182     std::vector<double, std::allocator<double> >::push_back(double const&) [5]
                0.00    0.00 1153598/1153842     std::vector<double, std::allocator<double> >::size() const [17]
                0.00    0.00 1153591/1153591     std::vector<double, std::allocator<double> >::operator[](unsigned long) [18]
                0.00    0.00 1048576/1048580     fwriteShortLSB(short, _IO_FILE*) [19]
                0.00    0.00       1/62          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [42]
                0.00    0.00       1/1           writeWaveFileHeader(int, int, double, _IO_FILE*) [61]
-----------------------------------------------
                0.74    0.11       2/2           main [1]
[2]     63.7    0.74    0.11       2         four2(double*, unsigned long) [2]
                0.11    0.00 2095104/3142656     void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.36    0.05       1/1           main [1]
[3]     31.1    0.36    0.05       1         four1(double*, unsigned long) [3]
                0.05    0.00 1047552/3142656     void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.05    0.00 1047552/3142656     four1(double*, unsigned long) [3]
                0.11    0.00 2095104/3142656     four2(double*, unsigned long) [2]
[4]     12.0    0.16    0.00 3142656         void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.01    0.01 1153591/2307182     getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [6]
                0.01    0.01 1153591/2307182     main [1]
[5]      2.3    0.01    0.02 2307182         std::vector<double, std::allocator<double> >::push_back(double const&) [5]
                0.00    0.02 2307121/2307182     void __gnu_cxx::__alloc_traits<std::allocator<double> >::construct<double>(std::allocator<double>&, double*, double const&) [8]
                0.00    0.00      61/61          std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&) [9]
                0.00    0.00      61/61          std::vector<double, std::allocator<double> >::end() [48]


Not sure if that change would really make a difference of 2 milliseconds, it definitely is faster to use memset which is byte level, but not this much improvement.
thatSize is about 1.05 million or 2^20 for the tabla soundclip:

git diff:
-    for (int i=0; i<thatSize; i++)
-    {
-       xcomplex[i] = 0.0;
-       hcomplex[i] = 0.0;
-    }
+    memset(xcomplex, 0, 8*thatSize);
+    memset(hcomplex, 0, 8*thatSize);




++++++++++++++++++++++++++SECOND AFTER FFT ++++++++++++++++++++++++++++++++++++++++++
++++Changed substractions to additon of negative during convolution (after FFT)+++++

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.75% of 1.34 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.03    1.31                 main [1]
                0.75    0.11       2/2           four2(double*, unsigned long) [2]
                0.38    0.05       1/1           four1(double*, unsigned long) [3]
                0.02    0.00       2/2           getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [5]
                0.00    0.00 1153598/1153842     std::vector<double, std::allocator<double> >::size() const [16]
                0.00    0.00 1153591/2307182     std::vector<double, std::allocator<double> >::push_back(double const&) [14]
                0.00    0.00 1153591/1153591     std::vector<double, std::allocator<double> >::operator[](unsigned long) [17]
                0.00    0.00 1048576/1048580     fwriteShortLSB(short, _IO_FILE*) [18]
                0.00    0.00       1/62          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [41]
                0.00    0.00       1/1           writeWaveFileHeader(int, int, double, _IO_FILE*) [61]
-----------------------------------------------
                0.75    0.11       2/2           main [1]
[2]     63.9    0.75    0.11       2         four2(double*, unsigned long) [2]
                0.11    0.00 2095104/3142656     void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.38    0.05       1/1           main [1]
[3]     32.3    0.38    0.05       1         four1(double*, unsigned long) [3]
                0.05    0.00 1047552/3142656     void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.05    0.00 1047552/3142656     four1(double*, unsigned long) [3]
                0.11    0.00 2095104/3142656     four2(double*, unsigned long) [2]
[4]     11.9    0.16    0.00 3142656         void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.02    0.00       2/2           main [1]
[5]      1.5    0.02    0.00       2         getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [5]
                0.00    0.00 1153591/2307182     std::vector<double, std::allocator<double> >::push_back(double const&) [14]

These operations are done 1-2 times for every point in the larger sound file.: 

git diff:
     for(int i=0; i<pow2; i++)
     {
-       ycomplex[2*i] = (xcomplex[i] * hcomplex[i] - xcomplex[i+1] * hcomplex[i+1]);
-       ycomplex[2*i+1] = (xcomplex[i+1] * hcomplex[i] - xcomplex[i] * hcomplex[i+1]);
+       ycomplex[2*i] = (xcomplex[i] * hcomplex[i] + (-xcomplex[i+1] * hcomplex[i+1]));
+       ycomplex[2*i+1] = (xcomplex[i+1] * hcomplex[i] + (-xcomplex[i] * hcomplex[i+1]));
     }


++++++++++++++++++++++++THIRD AFTER FFT+++++++++++++++++++++++++++++++++++++++++
+++++Change integer multiplications of 2 into left bit shifts+++++++++++


		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.75% of 1.33 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.04    1.30                 main [1]
                0.73    0.11       2/2           four2(double*, unsigned long) [2]
                0.37    0.05       1/1           four1(double*, unsigned long) [3]
                0.01    0.01 1153591/2307182     std::vector<double, std::allocator<double> >::push_back(double const&) [5]
                0.00    0.02       2/2           getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [6]
                0.01    0.00 1153591/1153591     std::vector<double, std::allocator<double> >::operator[](unsigned long) [10]
                0.00    0.00 1153598/1153842     std::vector<double, std::allocator<double> >::size() const [18]
                0.00    0.00 1048576/1048580     fwriteShortLSB(short, _IO_FILE*) [19]
                0.00    0.00       1/62          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [42]
                0.00    0.00       1/1           writeWaveFileHeader(int, int, double, _IO_FILE*) [61]
-----------------------------------------------
                0.73    0.11       2/2           main [1]
[2]     62.4    0.73    0.11       2         four2(double*, unsigned long) [2]
                0.11    0.00 2095104/3142656     void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.37    0.05       1/1           main [1]
[3]     31.6    0.37    0.05       1         four1(double*, unsigned long) [3]
                0.05    0.00 1047552/3142656     void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.05    0.00 1047552/3142656     four1(double*, unsigned long) [3]
                0.11    0.00 2095104/3142656     four2(double*, unsigned long) [2]
[4]     11.9    0.16    0.00 3142656         void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.01    0.01 1153591/2307182     getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [6]
                0.01    0.01 1153591/2307182     main [1]
[5]      2.2    0.02    0.01 2307182         std::vector<double, std::allocator<double> >::push_back(double const&) [5]
                0.00    0.01 2307121/2307182     void __gnu_cxx::__alloc_traits<std::allocator<double> >::construct<double>(std::allocator<double>&, double*, double const&) [8]
                0.00    0.00      61/61          std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&) [11]
                0.00    0.00      61/61          std::vector<double, std::allocator<double> >::end() [48]

The results for this one may/may not be that large. the range of results I got were between 1.28 and 1.40 seconds. mult by two is called for every point in convolution though.:

git diff:
-    int thatSize = 2 * pow2;
+    int thatSize = pow2 << 1;
 
     for (int i=0; i<soundData.size(); i++)
     {
-       xcomplex[2*i] = soundData[i];
+       xcomplex[i << 1] = soundData[i];
     }
     for (int i=0; i<irData.size(); i++)
     {
-       hcomplex[2*i] = irData[i];
+       hcomplex[i << 1] = irData[i];
     }
     
     for(int i=0; i<pow2; i++)
     {
-       ycomplex[2*i] = (xcomplex[i] * hcomplex[i] + (-xcomplex[i+1] * hcomplex[i+1]));
-       ycomplex[2*i+1] = (xcomplex[i+1] * hcomplex[i] + (-xcomplex[i] * hcomplex[i+1]));
+       ycomplex[i << 1] = (xcomplex[i] * hcomplex[i] + (-xcomplex[i+1] * hcomplex[i+1]));
+       ycomplex[(i << 1) +1] = (xcomplex[i+1] * hcomplex[i] + (-xcomplex[i] * hcomplex[i+1]));
     }


++++++++++++++++++++++++FOURTH++++++++++++++++++++++
+++++integer multiplication by 8 to bit shifting+++++++

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.75% of 1.33 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.04    1.30                 main [1]
                0.73    0.11       2/2           four2(double*, unsigned long) [2]
                0.37    0.05       1/1           four1(double*, unsigned long) [3]
                0.01    0.01 1153591/2307182     std::vector<double, std::allocator<double> >::push_back(double const&) [5]
                0.00    0.02       2/2           getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [6]
                0.01    0.00 1153591/1153591     std::vector<double, std::allocator<double> >::operator[](unsigned long) [10]
                0.00    0.00 1153598/1153842     std::vector<double, std::allocator<double> >::size() const [18]
                0.00    0.00 1048576/1048580     fwriteShortLSB(short, _IO_FILE*) [19]
                0.00    0.00       1/62          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [42]
                0.00    0.00       1/1           writeWaveFileHeader(int, int, double, _IO_FILE*) [61]
-----------------------------------------------
                0.73    0.11       2/2           main [1]
[2]     62.4    0.73    0.11       2         four2(double*, unsigned long) [2]
                0.11    0.00 2095104/3142656     void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.37    0.05       1/1           main [1]
[3]     31.6    0.37    0.05       1         four1(double*, unsigned long) [3]
                0.05    0.00 1047552/3142656     void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.05    0.00 1047552/3142656     four1(double*, unsigned long) [3]
                0.11    0.00 2095104/3142656     four2(double*, unsigned long) [2]
[4]     11.9    0.16    0.00 3142656         void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.01    0.01 1153591/2307182     getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [6]
                0.01    0.01 1153591/2307182     main [1]
[5]      2.2    0.02    0.01 2307182         std::vector<double, std::allocator<double> >::push_back(double const&) [5]
                0.00    0.01 2307121/2307182     void __gnu_cxx::__alloc_traits<std::allocator<double> >::construct<double>(std::allocator<double>&, double*, double const&) [8]
                0.00    0.00      61/61          std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&) [11]
                0.00    0.00      61/61          std::vector<double, std::allocator<double> >::end() [48]

Expected that this optimization would make a super miniscule difference... there was a total of TWO integer multiplications of 8

Git diff:
-    memset(xcomplex, 0, 8*thatSize);
-    memset(hcomplex, 0, 8*thatSize);
+    // or a left bit shift of 3 which 2^3 == 8
+    memset(xcomplex, 0, thatSize << 3);
+    memset(hcomplex, 0, thatSize << 3);
 


++++++++++++++++++++++++++++FIFTH+++++++++++++++++++++++++++++
++++++++change 2^n to 2 << n++++++++++++++++++++++++


		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.75% of 1.33 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.01    1.33                 main [1]
                0.75    0.09       2/2           four2(double*, unsigned long) [2]
                0.39    0.05       1/1           four1(double*, unsigned long) [3]
                0.01    0.01 1153591/2307182     std::vector<double, std::allocator<double> >::push_back(double const&) [5]
                0.00    0.02       2/2           getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [7]
                0.01    0.00 1153591/1153591     std::vector<double, std::allocator<double> >::operator[](unsigned long) [8]
                0.00    0.00 1153598/1153842     std::vector<double, std::allocator<double> >::size() const [21]
                0.00    0.00 1048576/1048580     fwriteShortLSB(short, _IO_FILE*) [22]
                0.00    0.00       1/62          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [44]
                0.00    0.00       1/1           writeWaveFileHeader(int, int, double, _IO_FILE*) [62]
-----------------------------------------------
                0.75    0.09       2/2           main [1]
[2]     62.9    0.75    0.09       2         four2(double*, unsigned long) [2]
                0.09    0.00 2095104/3142656     void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.39    0.05       1/1           main [1]
[3]     32.6    0.39    0.05       1         four1(double*, unsigned long) [3]
                0.05    0.00 1047552/3142656     void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.05    0.00 1047552/3142656     four1(double*, unsigned long) [3]
                0.09    0.00 2095104/3142656     four2(double*, unsigned long) [2]
[4]     10.4    0.14    0.00 3142656         void std::swap<double>(double&, double&) [4]
-----------------------------------------------
                0.01    0.01 1153591/2307182     getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [7]
                0.01    0.01 1153591/2307182     main [1]
[5]      3.0    0.01    0.03 2307182         std::vector<double, std::allocator<double> >::push_back(double const&) [5]
                0.02    0.01 2307121/2307182     void __gnu_cxx::__alloc_traits<std::allocator<double> >::construct<double>(std::allocator<double>&, double*, double const&) [6]
                0.00    0.00      61/61          std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&) [11]
                0.00    0.00      61/61          std::vector<double, std::allocator<double> >::end() [50]


Another optimization change that should not make a large difference. the pow() function was called a total of one times.

git diff:
-    int pow2 = pow(2, (int) log2(maxSize) + 1); // how does not casting this to int cause four1(hcomplex to segfault?
+    int pow2 = 2 << ((int) log2(maxSize)); // how does not casting this to int cause four1(hcomplex to segfault?



++++++++++++++++++++++++COMPILER OPTIMIZATION ON TOP OF 5 CODE OPTIMIZATIONS++++++++++++++++++++++


		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 1.25% of 0.80 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     66.2    0.53    0.00                 four2(double*, unsigned long) [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     30.0    0.24    0.00                 four1(double*, unsigned long) [2]
-----------------------------------------------
                                                 <spontaneous>
[3]      3.7    0.03    0.00                 getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [3]
                0.00    0.00      39/39          std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&) [11]
-----------------------------------------------
                0.00    0.00      39/39          getWavData(SF_INFO&, std::vector<double, std::allocator<double> >&, char const*, char const*) [3]
[11]     0.0    0.00    0.00      39         std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&) [11]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [23]
[12]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z14createTestToneddiPc [12]
-----------------------------------------------


level 3 compiler optimization cut the time by approx 40%. gprof output does not show the entire call stack which may/may not have been influenced by optimizations?
